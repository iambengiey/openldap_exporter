name: Build SLES Binary (GLIBC 2.31 Compatible)

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    name: Build on SLES 15 SP3 (GLIBC 2.31)
    runs-on: ubuntu-latest
    container:
      # Using a suitable public SLES 15 SP3 base image for GLIBC 2.31 compatibility
      image: registry.suse.com/suse/sle15:15.3
      
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Trust workspace for git
        # Necessary when running Git commands inside a non-root container environment
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

---
      - name: Set up Go 1.22 (Bypasses zypper issues) ðŸš€
        # This action reliably installs Go 1.22 directly into the PATH,
        # bypassing the image's limited/outdated package repository.
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
          # Use a different path for the cache key since it's not using zypper's go
          cache-key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

---
      - name: Install Dependencies (OpenLDAP devel) ðŸ“¦
        # Install only the OpenLDAP development libraries needed for CGO.
        # We also use '--no-gpg-checks' to bypass the expired key issue.
        # Note: The correct package name on SLES/openSUSE is often 'libldap-devel' or 'libldap-2_4-2-devel'
        run: |
          # Try the most common name first, if that fails, try the older versioned name.
          # We use '-y' and '--no-gpg-checks' to avoid interactive prompts and the expired key warning.
          zypper install -y --no-gpg-checks libldap-devel || zypper install -y --no-gpg-checks libldap-2_4-2-devel
          # Install 'gcc' and 'make' if they aren't present, as CGO requires a C compiler
          zypper install -y --no-gpg-checks gcc make

---
      - name: Build linux amd64 binary (CGO Enabled) ðŸ”¨
        # CGO_ENABLED=1 links dynamically against the SLES 15 SP3 glibc 2.31 libraries.
        run: |
          mkdir -p dist
          # Go is now globally available thanks to setup-go
          GOOS=linux GOARCH=amd64 CGO_ENABLED=1 go build -o dist/openldap_exporter ./cmd/openldap_exporter

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: openldap-exporter-linux-amd64
          path: dist/openldap_exporter
