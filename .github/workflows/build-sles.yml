name: Build SLES Binary (GLIBC 2.31 Compatible)

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    name: Build on SLES 15 SP3 (GLIBC 2.31)
    runs-on: ubuntu-latest
    container:
      # Using SLES 15 SP3 BCI base image for GLIBC 2.31 compatibility
      image: rregistry.suse.com/suse/sle15:15.6
      
    steps:
      - name: Install Dependencies (Go 1.22 & OpenLDAP devel) ðŸ“¦
        # SLES 15 SP3 may not have Go 1.22 by default, so we install it,
        # along with the ldap-devel package required for cgo to link against OpenLDAP.
        run: |
          zypper install -y go1.22 ldap-devel
          # Create symlink for global go command access
          ln -s /usr/lib/go-1.22/bin/go /usr/bin/go

---
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Trust workspace for git
        # Necessary when running Git commands inside a non-root container environment
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
        
---
      - name: Set up Go cache
        uses: actions/cache@v4
        with:
          path: |
            /github/home/.cache/go-build
            /github/home/go/pkg/mod
          # Changed cache key to reflect SLES 15.3 for better separation
          key: ${{ runner.os }}-sles15.3-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-sles15.3-go-

---
      - name: Build linux amd64 binary (CGO Enabled) ðŸ”¨
        # CGO_ENABLED=1 ensures the Go binary links dynamically against the 
        # SLES 15 SP3 glibc 2.31 libraries, fixing the runtime error.
        run: |
          mkdir -p dist
          GOOS=linux GOARCH=amd64 CGO_ENABLED=1 go build -o dist/openldap_exporter ./cmd/openldap_exporter

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: openldap-exporter-linux-amd64
          path: dist/openldap_exporter
